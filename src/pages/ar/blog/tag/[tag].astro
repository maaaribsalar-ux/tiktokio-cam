---
import { getCollection } from "astro:content";
import Pagination from "@components/blog/pagination.astro";
import Posts from "@components/blog/posts.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Layout from "@layouts/Layout.astro";

// Add new built-in i18n imports
import { getLangFromUrl, useTranslations } from "../../../../i18n/utils";

export async function getStaticPaths() {
	const posts = await getCollection("blog", ({ data }) => {
		return !data.draft && data.publishDate < new Date();
	});
	
	// Filter for Arabic posts (posts starting with "ar/")
	const localizedPosts = posts.filter((page) => {
		const [lang, ...slug] = page.slug.split("/");
		return lang === "ar";
	});
	
	const tags = new Set();
	localizedPosts.map((post) => {
		Array.isArray(post.data.tags) &&
			post.data.tags.map((tag) => tags.add(tag.toLowerCase()));
	});
	
	return Array.from(tags).map((tag) => {
		return {
			params: { tag: tag },
			props: {
				posts: localizedPosts.filter(
					(post) =>
						Array.isArray(post.data.tags) &&
						post.data.tags.find((elem) => elem.toLowerCase() === tag),
				),
				tag: tag,
				lang: "ar",
			},
		};
	});
}

// Get the post directly from the prop on render
const { posts, tag, lang } = Astro.props;

// Get current language and create translation function
const currentLang = getLangFromUrl(Astro.url);
const t = useTranslations(currentLang);
---

<Layout title="Blog" dir={lang === 'ar' ? 'rtl' : 'ltr'}>
	<Container>
		<Sectionhead>
			<Fragment slot="title">#{tag}</Fragment>
			<Fragment slot="desc">We write about building startups and thoughts going on our mind.</Fragment>
		</Sectionhead>
		<Posts posts={posts} />
	</Container>
</Layout>